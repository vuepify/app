!function(){"use strict";function t(t){return(...e)=>function(t){try{return t()}catch(t){console.error(t)}}((()=>t(...e)))}function e(){setTimeout((()=>location.reload()),100)}const{port:n,version:o}=document.currentScript.dataset,r=new class{constructor(t){this._urls=t}async listenLiveReload(e){const n=await this._openLiveConnection();n.onclose=()=>this.listenLiveReload(e),n.onmessage=t((t=>{!0===JSON.parse(t.data).hotReload&&e()}))}_openLiveConnection(){return new Promise((t=>{const e=new WebSocket(this._urls.liveUrl);e.onopen=()=>t(e),e.onerror=()=>setTimeout(this._openLiveConnection.bind(this),2e3,t)}))}async fetchActualVersion(){return new Promise(((t,e)=>{const n=new XMLHttpRequest;n.open("GET",this._urls.versionUrl),n.onload=()=>t(JSON.parse(n.responseText)),n.onerror=e,n.send(null)}))}}(new class{constructor(t){this._port=t}buildSocketUrl(...t){return[`ws://localhost:${this._port}`,...t].join("/")}buildHttpUrl(...t){return[`http://localhost:${this._port}`,...t].join("/")}get liveUrl(){return this.buildSocketUrl("live")}get versionUrl(){return this.buildHttpUrl("version")}}(n));(async()=>{const t=(await r.fetchActualVersion()).version;if(o<t)return e();await r.listenLiveReload((()=>e())),VUEPIFY.isHotReloadReady=!0,document.dispatchEvent(new CustomEvent("vuepifyHotReloadReady"))})()}();
